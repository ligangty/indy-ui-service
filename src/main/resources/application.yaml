quarkus:
  application:
    name: "Indy"
  package:
    type: uber-jar
  http:
    port: 8080
    read-timeout: 30m
#    enable-compression: true
    limits:
      max-body-size: 1000M
    auth:
      permission:
        authenticated:
          paths: "/*"
          policy: authenticated
        token-auth:
          paths: "/api/admin/auth/*"
          policy: authenticated
        api-auth:
          paths: "/api/*"
          policy: authenticated
          methods: POST,PUT,DELETE
        api-public:
          paths: "/api/*"
          policy: permit
          methods: HEAD,GET
  oidc:
    enabled: true
#    auth-server-url: "http://localhost:8180/realms/test"
#    client-id: test
#    credentials:
#      secret: "UNSPECIFIED"
#    tls:
#      verification: none
#    token:
#      issuer: any
#    authentication:
#      user-info-required: true
#      redirect-path: "/"
#      restore-path-after-redirect: true
#    # "web-app" will use idtoken to get roles. So we set to accesstoken as its source here
#    roles:
#      source: "accesstoken"
#    logout:
#      path: "/logout"
#      post-logout-path: "/"
#    "application-type": "web-app"
#  oidc-client:
#    auth-server-url: "http://localhost:8180/realms/test"
#    client-id: test
  # This is used to do oidc token propagation with quarkus-oidc-token-propagation extension
  oidc-token-propagation:
    register-filter: true
  keycloak:
    devservices:
      enabled: false
  security:
    auth:
      enabled-in-dev-mode: false
  opentelemetry:
    enabled: true
  log:
    level: INFO
    min-level: TRACE
    category:
      "org.jboss":
        level: WARN
      "org.apache.http":
        level: WARN
      "io.quarkus":
        level: WARN
      "io.smallrye":
        level: WARN
      "org.eclipse":
        level: WARN
      "io.netty":
        level: WARN
      "io.grpc":
        level: WARN
      "org.commonjava.indy.service":
        level: INFO
    console:
      enable: true
      level: DEBUG
    file:
      level: DEBUG
      enable: true
      path: "log/indy-ui-service.log"
      format: "%d{HH:mm:ss} %-5p [%c{2.}] (%t) %s%e%n"
      rotation:
        max-backup-index: 5
        max-file-size: 10M
  swagger-ui:
    always-include: true
    title: "Indy"

  quinoa:
    # ui-dir: "webui"
    build-dir: "dist"
    package-manager-install:
      ~: true
      node-version: "18.18.2"
      npm-version: "9.8.1"
    package-manager-command:
      install-env:
        strict-ssl: false
      install: "npm config set strict-ssl false && npm ci"

# These REST APIs are not needed to show in rest docs
mp:
  openapi:
    scan:
      exclude:
        packages:
          - org.commonjava.indy.service.ui.jaxrs.stats
          - org.commonjava.indy.service.ui.models.stats
          - org.commonjava.indy.service.ui.keycloak


indy_security:
  enabled: False

## [rest client]
service-api/mp-rest/uri: http://localhost:8080/
service-api/mp-rest/scope: javax.inject.Singleton
service-api/mp-rest/connectTimeout: 60000
service-api/mp-rest/readTimeout: 60000
#service-api/mp-rest/providers: org.commonjava.indy.service.ui.client.AuthClientRequestFilter
service-api/mp-rest/providers: io.quarkus.oidc.token.propagation.AccessTokenRequestFilter
